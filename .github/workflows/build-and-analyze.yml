# Nombre del pipeline que aparecerá en la pestaña "Actions" de GitHub
name: Build, Test and Analyze

# Disparadores: Cuándo se debe ejecutar este pipeline
on:
  # Ejecutar en cada push a la rama principal (main)
  push:
    branches:
      - main
  # Ejecutar también en Pull Requests que apunten a la rama principal
  pull_request:
    types: [opened, synchronize, reopened]

# Trabajos (Jobs) que se ejecutarán en el pipeline
jobs:
  build-test-analyze:
    # Nombre del trabajo
    name: Build, Test and Analyze
    # Usar una máquina virtual de Ubuntu para ejecutar los comandos
    runs-on: ubuntu-latest

    # Pasos (Steps) que se ejecutarán en orden
    steps:
      # 1. Clonar el código de tu repositorio
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Necesario para un análisis de PR preciso

      # 2. Configurar el entorno de Python
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10' # Usa la versión de Python de tu proyecto

      # 3. Instalar las dependencias del proyecto y de las pruebas
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov # Instala pytest y la herramienta de cobertura
          # Si tienes un archivo requirements.txt, descomenta la siguiente línea:
          # pip install -r requirements.txt

      # 4. Ejecutar las pruebas unitarias con Pytest y generar reporte de cobertura
      - name: Run unit tests with Pytest
        run: pytest --cov=. --cov-report=xml

      # 5. Ejecutar el análisis de SonarQube
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@f6f600f12d5d7e17c99ac5a060e34011d0111264
        env:
          # El token que guardaste en los secretos de GitHub
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          # El host de SonarQube Cloud
          SONAR_HOST_URL: https://sonarcloud.io
        with:
          # Argumentos pasados al escáner de SonarQube
          args: >
            -Dsonar.projectKey=PabloBocel_mini_pytest_proyecto
            -Dsonar.organization=pablobocel
            -Dsonar.sources=.
            -Dsonar.python.coverage.reportPaths=coverage.xml
